# /nodes/{node_id}/registrations/
get:
  summary: List all registrations
  description: >-
    List of all registrations of the given node.

    ####Returns


    Returns a JSON object containing `data` and `links` keys.


    The `data` key contains an array of up to 10 registrations.
    Each resource in the array is a separate registrations object.


    The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

    ####Filtering


    You can optionally request that the response only include registrations that match your filters by utilizing the filter query parameter, e.g. https://api.osf.io/v2/registrations/?filter[title]=open.


    Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.


  parameters:
    - in: path
      name: node_id
      type: string
      required: true
      description: 'The unique identifier of the node.'

  tags:
    - Nodes

  operationId: nodes_registrations_list
  x-response-schema: Registration
  responses:
    '200':
      description: 'OK'
      schema:
        type: array
        items:
          $ref: '../registrations/definition.yaml'
      examples:
        application/json:
          data:
            relationships:
              files:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/files/
                    meta: {}
              view_only_links:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/view_only_links/
                    meta: {}
              citation:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/citation/
                    meta: {}
              registration_schema:
                links:
                  related:
                    href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2be/
                    meta: {}
              logs:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/logs/
                    meta: {}
              contributors:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/contributors/
                    meta: {}
              forks:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/forks/
                    meta: {}
              root:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/
                    meta: {}
              identifiers:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/identifiers/
                    meta: {}
              comments:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/comments/?filter%5Btarget%5D=esa63
                    meta: {}
              registered_from:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/dpfyv/
                    meta: {}
              linked_registrations:
                links:
                  self:
                    href: https://api.osf.io/v2/registrations/esa63/relationships/linked_registrations/
                    meta: {}
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/linked_registrations/
                    meta: {}
              registered_by:
                links:
                  related:
                    href: https://api.osf.io/v2/users/ztdnp/
                    meta: {}
              linked_nodes:
                links:
                  self:
                    href: https://api.osf.io/v2/registrations/esa63/relationships/linked_nodes/
                    meta: {}
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/linked_nodes/
                    meta: {}
              wikis:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/wikis/
                    meta: {}
              affiliated_institutions:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/institutions/
                    meta: {}
              children:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/children/
                    meta: {}
            links:
              self: https://api.osf.io/v2/registrations/esa63/
              html: https://osf.io/esa63/
            attributes:
              registration_supplement: Open-Ended Registration
              pending_embargo_approval: false
              registration: true
              embargo_end_date:
              withdrawn: false
              withdrawal_justification:
              category: project
              preprint: false
              current_user_permissions:
              - read
              title: How Awareness Impacts Multiple Forms of Social Bias in Behavior (Final
                Data Collection and Analysis Plan)
              registered_meta:
                summary:
                  comments: []
                  value: This pre-registration is an updated data collection and analysis plan.
                    See https://osf.io/ptcqw/ for original data collection rule and https://osf.io/8jyu8/
                    for original analysis plan. We are collecting more data given that results
                    after original data collection were inconclusive.
                  extra: []
              public: true
              fork: false
              description: ''
              tags: []
              collection: false
              current_user_can_comment: true
              pending_registration_approval: false
              date_modified: '2017-02-12T19:22:26.488000'
              date_registered: '2017-02-12T19:28:48.864000'
              node_links:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/esa63/node_links/
                    meta: {}
              date_created: '2017-02-12T18:45:55.063000'
              pending_withdrawal: false
              node_license:
            type: registrations
            id: esa63

# /nodes/{node_id}/registrations/
post:
  summary: Create a registration
  description: >-
    Initiate a registration of the current draft registration.

    Draft registrations contain the supplemental registration questions that accompany a registration.
    A registration is a frozen version of the project that can never be edited or deleted, but can be withdrawn.


    Your original project remains editable but will now have the registration linked to it.

    #### Permissions

    Only project administrators may view create registrations.

    #### Required

    Required fields for creating a registration include:


    &nbsp;&nbsp;&nbsp;&nbsp`draft_registration`

    #### Returns

    Returns a JSON object with a `data` key containing the representation of the created
    registration, if the request is successful.


    If the request is unsuccessful, an `errors` key containing
    information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes)
    to understand why this request may have failed.

  parameters:
    - description: ''
      required: true
      type: string
      name: node_id
      in: path
    - schema:
        required:
          - type
          - draft_registration
          - registration_choice
        type: object
        properties:
          registration_choice:
            type: string
            description: 'either embargo or immediate'
          lift_embargo:
            type: string
            description: 'only availble if your registration_choice is embargo and will be in the format of 2017-05-10T20:44:03.185000'
          type:
            type: string
            description: 'can only be registrations'
          draft_registration:
            type: string
            description: 'the guid for the draft registration to be registered'
      name: data
      in: body
  tags:
    - Nodes

  operationId: nodes_registrations
  x-response-schema: Registration
  responses:
    '201':
      description: ''
      schema:
        type: array
        items:
          $ref: '../registrations/definition.yaml'
      example:
        application/json:
          data:
            type: registrations
            attributes:
              draft_registration: '{draft_registration_id}'
              registration_choice: 'embargo'
              lift_embargo: '2017-05-10T20:44:03.185000'
