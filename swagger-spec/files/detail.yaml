get:
  summary: Retrieve a file
  description: >-
    Retrieves the details of a file (or folder)


    #### Returns


    Returns a JSON object with a `data` key containing the representation of the requested
    file, if the request was successful.


    If the request is unsuccessful, an `errors` key containing
    information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes)
    to understand why this request may have failed.


    ### Waterbutler API actions


    Files can be modified via the Waterbutler URLs found in the `links` key of
    the response (new_folder, move, upload, download, and delete). Further
    information about how to interact with files can be found in the
    [Waterbutler API documentation](https://waterbutler.readthedocs.io/en/latest/api.html#v1-api).


  parameters:
    - in: path
      type: string
      required: true
      name: file_id
      description: 'The unique identifier of the file you wish to retrieve.'
  tags:
    - Files
  operationId: files_detail
  x-response-schema: File
  responses:
    '200':
      description: OK
      schema:
        type: array
        items:
          $ref: 'definition.yaml'
      examples:
        application/json:
          data:
            relationships:
              node:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/
                    meta: {}
              comments:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                    meta: {}
              versions:
                links:
                  related:
                    href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                    meta: {}
            links:
              info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
              self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
              move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
              upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
              download: https://osf.io/download/sejcv
              delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
            attributes:
              extra:
                hashes:
                  sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                  md5: 44325d4f13b09f3769ede09d7c20a82c
                downloads: 442
              kind: file
              name: OSC2012.pdf
              last_touched: '2015-09-18T01:11:16.328000'
              materialized_path: "/OSC2012.pdf"
              date_modified: '2014-10-17T19:24:12.264Z'
              current_version: 1
              delete_allowed: true
              date_created: '2014-10-17T19:24:12.264Z'
              provider: osfstorage
              path: "/553e69248c5e4a219919ea54"
              current_user_can_comment: true
              guid: sejcv
              checkout:
              tags: []
              size: 216945
            type: files
            id: 553e69248c5e4a219919ea54

patch:
  summary: Update a file
  description: >-
    Updates the specified file by setting the values of the parameters passed.
    Any parameters not provided will be left unchanged.

    #### Returns

    Returns JSON with a `data` key containing the new representation of the updated
    file, if the request is successful.


    If the request is unsuccessful, JSON with an `errors` key containing
    information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes)
    to understand why this request may have failed.

  parameters:
    - in: path
      type: string
      required: true
      name: file_id
      description: 'The unique identifier of the file you wish to update.'
    - in: body
      name: body
      required: true
      schema:
        type: object
        example:
          data:
            type: files
            id: '{file_id}'
            attributes:
              name: "new file name.jpg"
  tags:
    - Files
  operationId: files_patch
  responses:
    '200':
      description: 'OK'
