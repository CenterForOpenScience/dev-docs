get:
  summary: List all preprints
  description: >-
    A paginated list of preprints from all preprint providers.
    The returned preprints are sorted by their creation date, with the most recent
    preprints appearing first.


    #### Returns


    Returns a JSON object containing `data` and `links` keys.


    The `data` key contains an array of 10 preprints.
    Each resource in the array is a separate preprint object.


    The `links` key contains a dictionary of links that can be used
    for [pagination](#tag/Pagination).


    This request should never return an error.


    #### Filtering


    You can optionally request that the response only include preprints that
    match your filters by utilizing the `filter` query parameter, e.g.
    https://api.osf.io/v2/preprints/?filter[provider]=socarxiv.


    Preprints may be filtered by their `id`, `is_published`, `date_created`,
    `date_modified`, and `provider`.


    You can learn more about advanced filtering features [here](#tag/Filtering).


  tags:
    - Preprints
  operationId: preprints_list
  x-response-schema: 'Preprint'
  responses:
    '200':
      description: OK
      schema:
        type: array
        items:
          $ref: 'definition.yaml'
      examples:
        application/json:
          data:
            - relationships:
                node:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/nodes/5xuck/'
                      meta: {}
                    self:
                      href: 'https://api.osf.io/v2/preprints/hqb2p/relationships/node/'
                      meta: {}
                files:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/preprints/hqb2p/files/'
                      meta: {}
                contributors:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/preprints/hqb2p/contributors/'
                      meta: {}
                citation:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/preprints/hqb2p/citation/'
                      meta: {}
                identifiers:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/preprints/hqb2p/identifiers/'
                      meta: {}
                primary_file:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/files/5894204f594d900200ed23f2/'
                      meta: {}
                license:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/'
                      meta: {}
                provider:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/preprint_providers/socarxiv/'
                      meta: {}
                requests:
                  links:
                    related:
                      href: 'https://api.osf.io/v2/preprints/hqb2p/requests/'
                      meta: {}
                review_actions:
                    links:
                        related:
                            href: 'https://api.osf.io/v2/preprints/hqb2p/review_actions/'
                            meta: {}
              links:
                self: 'https://api.osf.io/v2/preprints/hqb2p/'
                html: 'https://osf.io/preprints/socarxiv/hqb2p/'
                preprint_doi: 'https://dx.doi.org/10.5072/FK2OSF.IO/HQB2P'
              attributes:
                date_last_transitioned: '2018-10-15T13:44:09.478243'
                doi: null
                description: 'A tale of two cities'
                title: 'A Study of Urban versus Rural'
                reviews_state: 'accepted'
                license_record:
                  copyright_holders: []
                  year: '2017'
                date_modified: '2017-02-03T06:19:00.158000'
                original_publication_date: null
                date_withdrawn: null
                preprint_doi_created: null
                is_preprint_orphan: false
                date_published: '2017-02-03T06:18:59.788000'
                subjects:
                  - - text: Social and Behavioral Sciences
                      id: 584240da54be81056cecac48
                    - text: Political Science
                      id: 584240da54be81056cecac1a
                date_created: '2017-02-03T06:16:57.129000'
                is_published: true
                public: true
                tags:
                - city
                - country
                - suburb
                current_user_permissions:
                - read
              type: preprints
              id: hqb2p
          links:
            first:
            last: https://api.osf.io/v2/preprints/?page=172
            prev:
            next: https://api.osf.io/v2/preprints/?page=2
            meta:
              total: 1720
              per_page: 10

post:
  summary: Create a preprint
  description: >-
    Creates a new preprint.  Initial request to start the preprint requires a title and a provider.


    After you've created the preprint, you will need to upload a file to the preprint
    or copy a file from an existing OSF project, which will be a waterbutler request.


    To upload a new file to the preprint -

        1. Make a request to the preprint files' relationship to get the preprint's upload link.
        2. Issue a PUT request to the preprint's upload link

        curl -X "PUT" "https://files.us.osf.io/v1/resources/<preprint_id>/providers/osfstorage/?kind=file&name=my_preprint_file.txt" \
            --
            -H "Authorization: Bearer your-token-goes-here" \
            -H "Content-Type: text/plain" \
            -d "Contents of my preprint file go here"

    To copy an existing file from a project to your preprint -

        1. Make a request to the node file's list endpoint GET http://api.osf.io/v2/nodes/node_id/files/osfstorage/
        2. Locate the "move" relationship link for the file you wish to copy from the node to the preprint
        3. Issue a POST request to the file's move link, where the resource is the preprint id, the action is copy, and the provider is osfstorage.

        curl -X "POST" "https://files.us.osf.io/v1/resources/<node_id>/providers/osfstorage/<file_id>" \
            --
            -H "Authorization: Bearer your-token-goes-here " \
            -H "Content-Type: application/json" \
            -d '{"action": "copy", "path": "/", "resource": "<preprint_id>", "provider": "osfstorage", "conflict": "replace"}'


    #### Returns

    Returns a JSON object with a `data` key containing the representation of the created
    preprint, if the request is successful.


    If the request is unsuccessful, an `errors` key containing
    information about the failure will be returned. Refer to the [list of error codes]()
    to understand why this request may have failed.
  parameters:
    - in: body
      name: data
      required: true
      schema:
        $ref: 'definition.yaml'
  tags:
  - Preprints
  operationId: preprints_create
  consumes:
  - application/json
  x-response-schema: 'Preprint'
  responses:
    '201':
      description: 'Success'
